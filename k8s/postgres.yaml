# postgres.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: default
  labels:
    app: postgres
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      initContainers:
        - name: setup-data-dir
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "Setting up data directory..."
              mkdir -p /postgres-data/data
              chown -R 999:999 /postgres-data
              chmod 700 /postgres-data/data
              # Remove any lost+found if exists
              rm -rf /postgres-data/lost+found
          volumeMounts:
            - name: data
              mountPath: /postgres-data
          securityContext:
            runAsUser: 0
      containers:
        - name: postgres
          image: postgres:15-alpine
          envFrom:
            - secretRef:
                name: postgres-secret
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /postgres-data
              subPath: data
          env:
            - name: PGDATA
              value: /postgres-data/data
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: default
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
