version: "3.9"

services:
  # üóÑÔ∏è PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: employee-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: employees
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ‚öôÔ∏è Backend (Go Fiber)
  backend:
    image: shubhamchau/emp-backend:v1.0   # use your prebuilt image
    container_name: employee-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: employees
      DB_PORT: 5432
      ALLOWED_ORIGINS: "*"
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/employees"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üíª Frontend (React + Nginx)
  frontend:
    image: shubhamchau/emp-frontend:v1.3   # use your built image
    container_name: employee-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:80"
    # No environment vars needed ‚Äî Nginx proxy handles /api internally
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
